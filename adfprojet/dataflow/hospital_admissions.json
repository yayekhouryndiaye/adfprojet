{
	"name": "hospital_admissions",
	"properties": {
		"folder": {
			"name": "Learn"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_hospital_admissions",
						"type": "DatasetReference"
					},
					"name": "hospitaladmissions"
				},
				{
					"dataset": {
						"referenceName": "DS_lookup_country",
						"type": "DatasetReference"
					},
					"name": "pays"
				},
				{
					"dataset": {
						"referenceName": "DS_dim_date",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_admission",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "renomereliminer",
					"description": "renomer date et yearweek et excure url"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "select1"
				},
				{
					"name": "split1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "aggregate"
				},
				{
					"name": "join1"
				},
				{
					"name": "pivot1"
				},
				{
					"name": "sort1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as date,",
				"          year_week as string,",
				"          value as double,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     ignoreNoFilesFound: false) ~> hospitaladmissions",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     ignoreNoFilesFound: false) ~> pays",
				"source(output(",
				"          date_key as string,",
				"          date as string,",
				"          year as string,",
				"          month as string,",
				"          day as string,",
				"          day_name as string,",
				"          day_of_year as string,",
				"          week_of_month as string,",
				"          week_of_year as string,",
				"          month_name as string,",
				"          year_month as string,",
				"          year_week as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"hospitaladmissions select(mapColumn(",
				"          each(match(type==\"date\"||name=='year_week'),",
				"               'reported_'+$$ = $$),",
				"          each(match(name!='url'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> renomereliminer",
				"renomereliminer, pays lookup(renomereliminer@country == pays@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 select(mapColumn(",
				"          reported_date,",
				"          reported_year_week,",
				"          country = renomereliminer@country,",
				"          indicator,",
				"          value,",
				"          source,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 split(substring(indicator, 1,5)=='Daily',",
				"     disjoint: false) ~> split1@(daily, weekly)",
				"source1 derive(colonnederive = year+'-W'+lpad(week_of_year,2,'0')) ~> derivedColumn1",
				"derivedColumn1 aggregate(groupBy(colonnederive),",
				"     date_debut_week = min(date),",
				"          date_fin_week = max(date)) ~> aggregate",
				"split1@weekly, aggregate join(reported_year_week == colonnederive,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 pivot(groupBy(reported_year_week,",
				"          country,",
				"          source,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_date,",
				"          colonnederive,",
				"          date_debut_week,",
				"          date_fin_week),",
				"     pivotBy(indicator),",
				"     count = sum(value),",
				"     columnNaming: 'compancy$N_$V',",
				"     lateral: true) ~> pivot1",
				"pivot1 sort(asc(country, true)) ~> sort1",
				"sort1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          country as string,",
				"          indicator as string,",
				"          date as string,",
				"          year_week as string,",
				"          value as string,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}